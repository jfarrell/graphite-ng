#
# Autogenerated by Thrift Compiler (0.9.2)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'

# Structs are the basic complex data structures. They are comprised of fields
# which each have an integer identifier, a type, a symbolic name, and an
# optional default value.
# 
# Fields can be declared "optional", which ensures they will not be included
# in the serialized output if they aren't set.  Note that this requires some
# manual management in some languages.
class Datapoint
  include ::Thrift::Struct, ::Thrift::Struct_Union
  VALUE = 1
  TIMESTAMP = 2

  FIELDS = {
    VALUE => {:type => ::Thrift::Types::DOUBLE, :name => 'value'},
    TIMESTAMP => {:type => ::Thrift::Types::I32, :name => 'timestamp'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class RenderData
  include ::Thrift::Struct, ::Thrift::Struct_Union
  TARGET = 1
  DATAPOINTS = 2

  FIELDS = {
    TARGET => {:type => ::Thrift::Types::STRING, :name => 'target'},
    DATAPOINTS => {:type => ::Thrift::Types::LIST, :name => 'datapoints', :element => {:type => ::Thrift::Types::STRUCT, :class => ::Datapoint}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

